{"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV6header2atSS4name_SS5valuetSi_tKF":{"name":"header(at:)","abstract":"<p>Obtains the header key/value pair at the given index within the table.</p>","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV11headerViews2at7NIOCore14ByteBufferViewV4name_AH5valuetSi_tKF":{"name":"headerViews(at:)","abstract":"<p>Obtains the header key/value pair at the given index within the table as sequences of","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV05firstC5Match3for5valueSi5index_Sb12matchesValuetSgSS_SSSgtF":{"name":"firstHeaderMatch(for:value:)","abstract":"<p>Searches the table to locate an existing header with the given name and value. If","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV3add11headerNamed5valueySS_SStKF":{"name":"add(headerNamed:value:)","abstract":"<p>Appends a header to the table.</p>","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV3add11headerNamed5valueyx_q_tKSlRzSlR_s5UInt8V7ElementRtzAhIRt_r0_lF":{"name":"add(headerNamed:value:)","abstract":"<p>Appends a header to the table.</p>","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV07dynamicD6LengthSivp":{"name":"dynamicTableLength","abstract":"<p>The length, in bytes, of the dynamic portion of the header table.</p>","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV07dynamicD13AllowedLengthSivp":{"name":"dynamicTableAllowedLength","abstract":"<p>The current allowed length of the dynamic portion of the header table. May be","parent_name":"IndexedHeaderTable"},"Structs/IndexedHeaderTable.html#/s:8NIOHPACK18IndexedHeaderTableV010maxDynamicD6LengthSivp":{"name":"maxDynamicTableLength","abstract":"<p>The hard limit on the size to which the dynamic table may grow. Only a SETTINGS","parent_name":"IndexedHeaderTable"},"Structs/HPACKHeaders/Iterator.html#/s:St4next7ElementQzSgyF":{"name":"next()","parent_name":"Iterator"},"Structs/HPACKHeaders/Index.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Index"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV11httpHeaders20normalizeHTTPHeadersAC8NIOHTTP10F0V_Sbtcfc":{"name":"init(httpHeaders:normalizeHTTPHeaders:)","abstract":"<p>Constructor that can be used to map between <code>HTTPHeaders</code> and <code>HPACKHeaders</code> types.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV11httpHeadersAC8NIOHTTP111HTTPHeadersV_tcfc":{"name":"init(httpHeaders:)","abstract":"<p>Constructor that can be used to map between <code>HTTPHeaders</code> and <code>HPACKHeaders</code> types.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersVyACSaySS_SStGcfc":{"name":"init(_:)","abstract":"<p>Construct a <code>HPACKHeaders</code> structure.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV17dictionaryLiteralACSS_SStd_tcfc":{"name":"init(dictionaryLiteral:)","abstract":"<p>Construct a <code>HPACKHeaders</code> structure.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV_9allocatorACSaySS_SStG_7NIOCore19ByteBufferAllocatorVtcfc":{"name":"init(_:allocator:)","abstract":"<p>Construct a <code>HPACKHeaders</code> structure.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV3add4name5value8indexingySS_SSAA13HPACKIndexingOtF":{"name":"add(name:value:indexing:)","abstract":"<p>Add a header name/value pair to the block.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV3add10contentsOf8indexingyx_AA13HPACKIndexingOtSTRzSS_SSt7ElementRtzlF":{"name":"add(contentsOf:indexing:)","abstract":"<p>Add a sequence of header name/value pairs to the block.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV3add10contentsOfyx_tSTRzSS4name_SS5valueAA13HPACKIndexingO9indexablet7ElementRtzlF":{"name":"add(contentsOf:)","abstract":"<p>Add a sequence of header name/value/indexing triplet to the block.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV12replaceOrAdd4name5value8indexingySS_SSAA13HPACKIndexingOtF":{"name":"replaceOrAdd(name:value:indexing:)","abstract":"<p>Add a header name/value pair to the block, replacing any previous values for the","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV6remove4nameySS_tF":{"name":"remove(name:)","abstract":"<p>Remove all values for a given header name from the block.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersVySaySSGSScip":{"name":"subscript(_:)","abstract":"<p>Retrieve all of the values for a given header field name from the block.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV5first4nameSSSgSS_tF":{"name":"first(name:)","abstract":"<p>Retrieves the first value for a given header field name from the block.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV8contains4nameSbSS_tF":{"name":"contains(name:)","abstract":"<p>Checks if a header is present.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV13canonicalFormSaySSGSS_tcip":{"name":"subscript(canonicalForm:)","abstract":"<p>Retrieves the header values for the given header field in &ldquo;canonical form&rdquo;: that is,","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV8capacitySivp":{"name":"capacity","abstract":"<p>The total number of headers that can be contained without allocating new storage.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:8NIOHPACK12HPACKHeadersV15reserveCapacityyySiF":{"name":"reserveCapacity(_:)","abstract":"<p>Reserves enough space to store the specified number of headers.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:ST7ElementQa":{"name":"Element","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders/Index.html":{"name":"Index","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:Sl10startIndex0B0Qzvp":{"name":"startIndex","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:Sk5index6before5IndexQzAD_tF":{"name":"index(before:)","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:Sk5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:Sly7ElementQz5IndexQzcip":{"name":"subscript(_:)","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders/Iterator.html":{"name":"Iterator","abstract":"<p>An iterator of HTTP header fields.</p>","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:Sl12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"HPACKHeaders"},"Structs/HPACKHeaders.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"HPACKHeaders"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV23defaultDynamicTableSizeSivpZ":{"name":"defaultDynamicTableSize","abstract":"<p>The default size of the encoder&rsquo;s dynamic header table.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV16HeaderDefinitionV":{"name":"HeaderDefinition","abstract":"<p>Undocumented</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV18useHuffmanEncodingSbvp":{"name":"useHuffmanEncoding","abstract":"<p>Whether to use Huffman encoding.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV16dynamicTableSizeSivp":{"name":"dynamicTableSize","abstract":"<p>The current size of the dynamic table.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV23allowedDynamicTableSizeSivp":{"name":"allowedDynamicTableSize","abstract":"<p>The current maximum size to which the dynamic header table may grow.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV23maximumDynamicTableSizeSivp":{"name":"maximumDynamicTableSize","abstract":"<p>The hard maximum size of the dynamic header table, set via an HTTP/2","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV19setDynamicTableSizeyySiKF":{"name":"setDynamicTableSize(_:)","abstract":"<p>Sets the maximum size for the dynamic table and encodes the new value","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV9allocator18useHuffmanEncoding19maxDynamicTableSizeAC7NIOCore19ByteBufferAllocatorV_SbSitcfc":{"name":"init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","abstract":"<p>Initializer and returns a new HPACK encoder.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV13beginEncoding9allocatory7NIOCore19ByteBufferAllocatorV_tKF":{"name":"beginEncoding(allocator:)","abstract":"<p>Sets up the encoder to begin encoding a new header block.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV11endEncoding7NIOCore10ByteBufferVyKF":{"name":"endEncoding()","abstract":"<p>Finishes encoding the current header block and returns the resulting buffer.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV6encode7headers2toyAA12HPACKHeadersV_7NIOCore10ByteBufferVztKF":{"name":"encode(headers:to:)","abstract":"<p>A one-shot encoder that writes to a provided buffer.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV6append7headersyx_tKSTRzSS4name_SS5valuet7ElementRtzlF":{"name":"append(headers:)","abstract":"<p>Appends() headers in the default fashion: indexed if possible, literal+indexable if not.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV6append7headersyx_tKSTRzAC16HeaderDefinitionV7ElementRtzlF":{"name":"append(headers:)","abstract":"<p>Appends headers with their specified indexability.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV6append7headersyAA12HPACKHeadersV_tKF":{"name":"append(headers:)","abstract":"<p>Appends a set of headers with their associated indexability.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV6append6header5valueySS_SStKF":{"name":"append(header:value:)","abstract":"<p>Appends a header/value pair, using indexed names/values if possible. If no indexed pair is available,","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV16appendNonIndexed6header5valueySS_SStKF":{"name":"appendNonIndexed(header:value:)","abstract":"<p>Appends a header that is <em>not</em> to be entered into the dynamic header table, but allows that","parent_name":"HPACKEncoder"},"Structs/HPACKEncoder.html#/s:8NIOHPACK12HPACKEncoderV18appendNeverIndexed6header5valueySS_SStKF":{"name":"appendNeverIndexed(header:value:)","abstract":"<p>Appends a header that is <em>never</em> indexed, preventing even rewriting proxies from doing so.</p>","parent_name":"HPACKEncoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV19maxDynamicTableSizeSivpZ":{"name":"maxDynamicTableSize","abstract":"<p>Undocumented</p>","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV24defaultMaxHeaderListSizeSivpZ":{"name":"defaultMaxHeaderListSize","abstract":"<p>The default value of the maximum header list size for the decoder.</p>","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV25allowedDynamicTableLengthSivp":{"name":"allowedDynamicTableLength","abstract":"<p>The current allowed length of the dynamic portion of the header table. May be","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV17maxHeaderListSizeSivp":{"name":"maxHeaderListSize","abstract":"<p>The maximum size of the header list.</p>","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV21maxDynamicTableLengthSivp":{"name":"maxDynamicTableLength","abstract":"<p>The maximum size of the dynamic table as set by the enclosing protocol. This is defined in RFC 7541","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV9allocator19maxDynamicTableSizeAC7NIOCore19ByteBufferAllocatorV_Sitcfc":{"name":"init(allocator:maxDynamicTableSize:)","abstract":"<p>Creates a new decoder</p>","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV9allocator19maxDynamicTableSize0d10HeaderListG0AC7NIOCore19ByteBufferAllocatorV_S2itcfc":{"name":"init(allocator:maxDynamicTableSize:maxHeaderListSize:)","abstract":"<p>Creates a new decoder</p>","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html#/s:8NIOHPACK12HPACKDecoderV13decodeHeaders4fromAA12HPACKHeadersV7NIOCore10ByteBufferVz_tKF":{"name":"decodeHeaders(from:)","abstract":"<p>Reads HPACK encoded header data from a <code>ByteBuffer</code>.</p>","parent_name":"HPACKDecoder"},"Structs/HPACKDecoder.html":{"name":"HPACKDecoder","abstract":"<p>An <code>HPACKDecoder</code> maintains its own dynamic header table and uses that to"},"Structs/HPACKEncoder.html":{"name":"HPACKEncoder","abstract":"<p>An <code>HPACKEncoder</code> maintains its own dynamic header table and uses that to"},"Structs/HPACKHeaders.html":{"name":"HPACKHeaders","abstract":"<p>Very similar to <code>NIOHTTP1.HTTPHeaders</code>, but with extra data for storing indexing"},"Structs/IndexedHeaderTable.html":{"name":"IndexedHeaderTable","abstract":"<p>The unified header table used by HTTP/2, encompassing both static and dynamic tables.</p>"},"Protocols.html#/s:8NIOHPACK13NIOHPACKErrorP":{"name":"NIOHPACKError","abstract":"<p>Undocumented</p>"},"Enums/HuffmanDecodeError.html#/s:8NIOHPACK18HuffmanDecodeErrorO12InvalidStateV":{"name":"InvalidState","abstract":"<p>The decoder entered an invalid state. Usually this means invalid input.</p>","parent_name":"HuffmanDecodeError"},"Enums/HuffmanDecodeError.html#/s:8NIOHPACK18HuffmanDecodeErrorO11InvalidUTF8V":{"name":"InvalidUTF8","abstract":"<p>The output data could not be validated as UTF-8.</p>","parent_name":"HuffmanDecodeError"},"Enums/HPACKIndexing.html#/s:8NIOHPACK13HPACKIndexingO9indexableyA2CmF":{"name":"indexable","abstract":"<p>Header may be written into the dynamic index table or may be rewritten by","parent_name":"HPACKIndexing"},"Enums/HPACKIndexing.html#/s:8NIOHPACK13HPACKIndexingO12nonIndexableyA2CmF":{"name":"nonIndexable","abstract":"<p>Header is not written to the dynamic index table, but proxies may rewrite","parent_name":"HPACKIndexing"},"Enums/HPACKIndexing.html#/s:8NIOHPACK13HPACKIndexingO12neverIndexedyA2CmF":{"name":"neverIndexed","abstract":"<p>Header may not be written to the dynamic index table, and proxies must","parent_name":"HPACKIndexing"},"Enums/HPACKIndexing.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"HPACKIndexing"},"Enums/NIOHPACKErrors/EmptyLiteralHeaderFieldName.html#/s:8NIOHPACK14NIOHPACKErrorsO27EmptyLiteralHeaderFieldNameVAEycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"EmptyLiteralHeaderFieldName"},"Enums/NIOHPACKErrors/MaxHeaderListSizeViolation.html#/s:8NIOHPACK14NIOHPACKErrorsO26MaxHeaderListSizeViolationVAEycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"MaxHeaderListSizeViolation"},"Enums/NIOHPACKErrors/ZeroHeaderIndex.html#/s:8NIOHPACK14NIOHPACKErrorsO15ZeroHeaderIndexVAEycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ZeroHeaderIndex"},"Enums/NIOHPACKErrors/FailedToAddIndexedHeader.html#/s:8NIOHPACK14NIOHPACKErrorsO24FailedToAddIndexedHeaderV11bytesNeededSivp":{"name":"bytesNeeded","abstract":"<p>The table size required to be able to add this header to the table.</p>","parent_name":"FailedToAddIndexedHeader"},"Enums/NIOHPACKErrors/FailedToAddIndexedHeader.html#/s:8NIOHPACK14NIOHPACKErrorsO24FailedToAddIndexedHeaderV4namexvp":{"name":"name","abstract":"<p>The name of the header that could not be written.</p>","parent_name":"FailedToAddIndexedHeader"},"Enums/NIOHPACKErrors/FailedToAddIndexedHeader.html#/s:8NIOHPACK14NIOHPACKErrorsO24FailedToAddIndexedHeaderV5valueq_vp":{"name":"value","abstract":"<p>The value of the header that could not be written.</p>","parent_name":"FailedToAddIndexedHeader"},"Enums/NIOHPACKErrors/FailedToAddIndexedHeader.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"FailedToAddIndexedHeader"},"Enums/NIOHPACKErrors/InvalidDynamicTableSize.html#/s:8NIOHPACK14NIOHPACKErrorsO23InvalidDynamicTableSizeV09requestedF0Sivp":{"name":"requestedSize","abstract":"<p>The offending size.</p>","parent_name":"InvalidDynamicTableSize"},"Enums/NIOHPACKErrors/InvalidDynamicTableSize.html#/s:8NIOHPACK14NIOHPACKErrorsO23InvalidDynamicTableSizeV07allowedF0Sivp":{"name":"allowedSize","abstract":"<p>The actual maximum size that was set by the protocol.</p>","parent_name":"InvalidDynamicTableSize"},"Enums/NIOHPACKErrors/InvalidHeaderStartByte.html#/s:8NIOHPACK14NIOHPACKErrorsO22InvalidHeaderStartByteV4bytes5UInt8Vvp":{"name":"byte","abstract":"<p>The offending byte.</p>","parent_name":"InvalidHeaderStartByte"},"Enums/NIOHPACKErrors/InvalidUTF8Data.html#/s:8NIOHPACK14NIOHPACKErrorsO15InvalidUTF8DataV5bytes7NIOCore10ByteBufferVvp":{"name":"bytes","abstract":"<p>The offending bytes.</p>","parent_name":"InvalidUTF8Data"},"Enums/NIOHPACKErrors/StringLengthBeyondPayloadSize.html#/s:8NIOHPACK14NIOHPACKErrorsO29StringLengthBeyondPayloadSizeV6lengthSivp":{"name":"length","abstract":"<p>The length supplied.</p>","parent_name":"StringLengthBeyondPayloadSize"},"Enums/NIOHPACKErrors/StringLengthBeyondPayloadSize.html#/s:8NIOHPACK14NIOHPACKErrorsO29StringLengthBeyondPayloadSizeV9availableSivp":{"name":"available","abstract":"<p>The available number of bytes.</p>","parent_name":"StringLengthBeyondPayloadSize"},"Enums/NIOHPACKErrors/InvalidHeaderIndex.html#/s:8NIOHPACK14NIOHPACKErrorsO18InvalidHeaderIndexV08suppliedE0Sivp":{"name":"suppliedIndex","abstract":"<p>The offending index.</p>","parent_name":"InvalidHeaderIndex"},"Enums/NIOHPACKErrors/InvalidHeaderIndex.html#/s:8NIOHPACK14NIOHPACKErrorsO18InvalidHeaderIndexV09availableE0Sivp":{"name":"availableIndex","abstract":"<p>The highest index we have available.</p>","parent_name":"InvalidHeaderIndex"},"Enums/NIOHPACKErrors/InvalidHeaderIndex.html":{"name":"InvalidHeaderIndex","abstract":"<p>An indexed header referenced an index that doesn&rsquo;t exist in our","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/IndexedHeaderWithNoValue.html":{"name":"IndexedHeaderWithNoValue","abstract":"<p>A header block indicated an indexed header with no accompanying","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/StringLengthBeyondPayloadSize.html":{"name":"StringLengthBeyondPayloadSize","abstract":"<p>An encoded string contained an invalid length that extended","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/InvalidUTF8Data.html":{"name":"InvalidUTF8Data","abstract":"<p>Decoded string data could not be parsed as valid UTF-8.</p>","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/InvalidHeaderStartByte.html":{"name":"InvalidHeaderStartByte","abstract":"<p>The start byte of a header did not match any format allowed by","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/InvalidDynamicTableSize.html":{"name":"InvalidDynamicTableSize","abstract":"<p>A dynamic table size update specified an invalid size.</p>","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors.html#/s:8NIOHPACK14NIOHPACKErrorsO29IllegalDynamicTableSizeChangeV":{"name":"IllegalDynamicTableSizeChange","abstract":"<p>A dynamic table size update was found outside its allowed place.","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/FailedToAddIndexedHeader.html":{"name":"FailedToAddIndexedHeader","abstract":"<p>A new header could not be added to the dynamic table. Usually","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors.html#/s:8NIOHPACK14NIOHPACKErrorsO17InsufficientInputV":{"name":"InsufficientInput","abstract":"<p>Ran out of input bytes while decoding.</p>","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors.html#/s:8NIOHPACK14NIOHPACKErrorsO20EncoderAlreadyActiveV":{"name":"EncoderAlreadyActive","abstract":"<p>HPACK encoder asked to begin a new header block while partway through encoding","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors.html#/s:8NIOHPACK14NIOHPACKErrorsO17EncoderNotStartedV":{"name":"EncoderNotStarted","abstract":"<p>HPACK encoder asked to append a header without first calling <code>beginEncoding(allocator:)</code>.</p>","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/ZeroHeaderIndex.html":{"name":"ZeroHeaderIndex","abstract":"<p>HPACK decoder asked to decode an indexed header with index zero.</p>","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/MaxHeaderListSizeViolation.html":{"name":"MaxHeaderListSizeViolation","abstract":"<p>HPACK decoder asked to decode a header list that would violate the configured","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors/EmptyLiteralHeaderFieldName.html":{"name":"EmptyLiteralHeaderFieldName","abstract":"<p>HPACK decoder asked to decode a header field name that was empty.</p>","parent_name":"NIOHPACKErrors"},"Enums/NIOHPACKErrors.html":{"name":"NIOHPACKErrors","abstract":"<p>Errors raised by NIOHPACK while encoding/decoding data.</p>"},"Enums/HPACKIndexing.html":{"name":"HPACKIndexing","abstract":"<p>Defines the types of indexing and rewriting operations a decoder may take with"},"Enums/HuffmanDecodeError.html":{"name":"HuffmanDecodeError","abstract":"<p>Errors that may be encountered by the Huffman decoder.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}